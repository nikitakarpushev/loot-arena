import { useMemo } from 'react';
import { Link, useNavigate, useParams } from 'react-router-dom';
import { ChallengeCard } from '../components/ChallengeCard';
import { QuickActionButton } from '../components/QuickActionButton';
import { Section } from '../components/Section';
import { clubs, challenges } from '../data/sampleData';
import './ClubDetailsPage.css';

export default function ClubDetailsPage() {
  const { clubId } = useParams();
  const navigate = useNavigate();
  const club = useMemo(() => clubs.find((item) => item.id === clubId), [clubId]);

  if (!club) {
    return (
      <div className="club-details__empty">
        <p>–ö–ª—É–± –Ω–µ –Ω–∞–π–¥–µ–Ω.</p>
        <button type="button" onClick={() => navigate('/clubs')}>
          –ù–∞–∑–∞–¥ –∫ –∫–∞—Ç–∞–ª–æ–≥—É
        </button>
      </div>
    );
  }

  const activeChallenges = challenges.filter((challenge) => club.activeChallenges.includes(challenge.id));

  return (
    <div className="club-details">
      <section className="club-details__hero">
        <img src={club.emblem} alt="" />
        <div>
          <span className={`club-details__tag club-details__tag--${club.type}`}>
            {club.type === 'real' ? '–†–µ–∞–ª—å–Ω—ã–π –∫–ª—É–±' : '–ë—Ä–µ–Ω–¥' }
          </span>
          <h1>{club.name}</h1>
          <p>{club.description}</p>
          {club.location ? <span className="club-details__location">üìç {club.location}</span> : null}
          <div className="club-details__metrics">
            <span>‚òÖ {club.rating.toFixed(1)}</span>
            <span>{club.members.toLocaleString('ru-RU')} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤</span>
          </div>
        </div>
      </section>

      <div className="club-details__actions">
        {club.type === 'real' ? (
          <QuickActionButton icon="üìç" label="–ß–µ–∫-–∏–Ω" description="–°–∫–∞–Ω–∏—Ä—É–π QR" href="/#/check-in" />
        ) : (
          <QuickActionButton icon="üéØ" label="–ë—Ä–µ–Ω–¥-—á–µ–ª–ª–µ–Ω–¥–∂–∏" description="–†–µ–¥–∫–∏–π –ª—É—Ç" href="/#/challenges" />
        )}
        <QuickActionButton icon="üéÅ" label="–ü–æ–¥–∞—Ä–∫–∏" description="–ê–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã" href="/#/profile" />
      </div>

      <Section title="–ê–∫—Ç–∏–≤–Ω—ã–µ —á–µ–ª–ª–µ–Ω–¥–∂–∏" subtitle="–í—ã–ø–æ–ª–Ω—è–π –∏ –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π XP">
        <div className="club-details__challenges">
          {activeChallenges.map((challenge) => (
            <ChallengeCard key={challenge.id} challenge={challenge} showClub={false} />
          ))}
        </div>
      </Section>

      <Section title="–ü–æ–¥–∞—Ä–∫–∏" subtitle="–ó–∞–±–∏—Ä–∞–π –ª—É—Ç –∑–∞ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å">
        <div className="club-details__rewards">
          {club.rewards.map((reward) => (
            <article key={reward.id} className={`club-details__reward club-details__reward--${reward.rarity}`}>
              <header>
                <span>{reward.title}</span>
                <small>{reward.type}</small>
              </header>
              <p>{reward.description}</p>
              <strong>{reward.requirement}</strong>
            </article>
          ))}
        </div>
      </Section>

      <Section title="–ù–æ–≤–æ—Å—Ç–∏ –∫–ª—É–±–∞" subtitle="–ë—É–¥—å –≤ –∫—É—Ä—Å–µ –∞–ø–¥–µ–π—Ç–æ–≤">
        <div className="club-details__news">
          {club.news.map((item) => (
            <article key={item.id}>
              <span>{item.timestamp}</span>
              <h3>{item.title}</h3>
              <p>{item.body}</p>
            </article>
          ))}
        </div>
        <Link className="club-details__back" to="/clubs">
          ‚Üê –í –∫–∞—Ç–∞–ª–æ–≥ –∫–ª—É–±–æ–≤
        </Link>
      </Section>
    </div>
  );
}
