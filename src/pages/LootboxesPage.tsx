import { useMemo, useState } from 'react';
import { Section } from '../components/Section';
import { profile } from '../data/sampleData';
import './LootboxesPage.css';

type AvailableBox = {
  id: string;
  name: string;
  rarity: 'standard' | 'rare' | 'legendary';
  source: string;
};

const initialBoxes: AvailableBox[] = [
  { id: 'av-1', name: 'Neon Spark', rarity: 'standard', source: '–ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –≤—Ö–æ–¥' },
  { id: 'av-2', name: 'Cyber Pulse', rarity: 'rare', source: '–ß–µ–ª–ª–µ–Ω–¥–∂ ¬´Cyber Rush¬ª' }
];

export default function LootboxesPage() {
  const [available, setAvailable] = useState(initialBoxes);
  const [openingBox, setOpeningBox] = useState<AvailableBox | null>(null);
  const [openedBox, setOpenedBox] = useState<AvailableBox | null>(null);

  const history = useMemo(() => profile.lootboxHistory, []);

  const handleOpen = (box: AvailableBox) => {
    setOpeningBox(box);
    setOpenedBox(null);
    window.navigator.vibrate?.([80, 40, 120]);
    setTimeout(() => {
      setAvailable((prev) => prev.filter((item) => item.id !== box.id));
      setOpeningBox(null);
      setOpenedBox(box);
    }, 1400);
  };

  return (
    <div className="lootboxes">
      <Section title="–õ—É—Ç–±–æ–∫—Å—ã" subtitle="–û—Ç–∫—Ä–æ–π –∏ —É–∑–Ω–∞–π –Ω–∞–≥—Ä–∞–¥—É">
        <div className="lootboxes__grid">
          {available.map((box) => (
            <article key={box.id} className={`lootboxes__box lootboxes__box--${box.rarity}`}>
              <header>
                <span>{box.name}</span>
                <small>{box.source}</small>
              </header>
              <button type="button" onClick={() => handleOpen(box)} disabled={!!openingBox}>
                {openingBox?.id === box.id ? '–†–∞—Å–ø–∞–∫–æ–≤–∫–∞‚Ä¶' : '–û—Ç–∫—Ä—ã—Ç—å'}
              </button>
            </article>
          ))}
          {available.length === 0 && <p className="lootboxes__empty">–ù–µ—Ç –Ω–µ–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –ª—É—Ç–±–æ–∫—Å–æ–≤</p>}
        </div>
        {openedBox ? (
          <div className={`lootboxes__result lootboxes__result--${openedBox.rarity}`}>
            <span>üéâ</span>
            <div>
              <strong>–†–µ–¥–∫–∏–π –ª—É—Ç!</strong>
              <p>
                {openedBox.name} ‚Äî —Å–º–æ—Ç—Ä–∏ –Ω–∞–≥—Ä–∞–¥—ã –≤ —Ä–∞–∑–¥–µ–ª–µ ¬´–ü—Ä–æ—Ñ–∏–ª—å ‚Üí –ò—Å—Ç–æ—Ä–∏—è –ª—É—Ç–∞¬ª.
              </p>
            </div>
          </div>
        ) : null}
      </Section>

      <Section title="–ò—Å—Ç–æ—Ä–∏—è —Ä–∞—Å–ø–∞–∫–æ–≤–æ–∫" subtitle="–í—Å–µ –ø—Ä–∏–∑—ã –∑–∞ –ø–æ—Å–ª–µ–¥–Ω–∏–µ –Ω–µ–¥–µ–ª–∏">
        <div className="lootboxes__history">
          {history.map((drop) => (
            <article key={drop.id} className={`lootboxes__history-item lootboxes__history-item--${drop.rarity}`}>
              <header>
                <span>{drop.name}</span>
                <small>{drop.unlockedOn}</small>
              </header>
              <ul>
                {drop.rewards.map((reward) => (
                  <li key={reward}>{reward}</li>
                ))}
              </ul>
            </article>
          ))}
        </div>
      </Section>
    </div>
  );
}
